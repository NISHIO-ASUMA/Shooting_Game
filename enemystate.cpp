//=====================================
//
// 敵の状態管理処理 [ enemystate.cpp ]
// Author: Asuma Nishio
//
//=====================================

//**********************
// インクルードファイル
//**********************
#include "enemystate.h"

//**********************
// 定数宣言
//**********************
constexpr float FALL_VALUE = 15.0f; // 落下速度

//==================================
// 敵状態基底クラスコンストラクタ
//==================================
CEnemyStateBase::CEnemyStateBase()
{
	// 値のクリア
	m_ID = ID_NONE;
	m_pEnemy = nullptr;
}
//==================================
// 敵状態基底クラスデストラクタ
//==================================
CEnemyStateBase::~CEnemyStateBase()
{
	// 無し
}

//==================================
// 落下状態コンストラクタ
//==================================
CEnemyStateFall::CEnemyStateFall()
{
	// IDをセットする
	SetID(ID_FALL);
	m_fSpeedFall = NULL;
}
//==================================
// 落下状態デストラクタ
//==================================
CEnemyStateFall::~CEnemyStateFall()
{
	// 無し
}
//==================================
// 落下状態開始関数
//==================================
void CEnemyStateFall::OnStart()
{
	// 値をセット
	m_fSpeedFall = FALL_VALUE;
}
//==================================
// 落下状態更新関数
//==================================
void CEnemyStateFall::OnUpdate()
{
	// 現在座標の取得
	D3DXVECTOR3 NowPos = m_pEnemy->GetPos();

	// 落下スピードを掛ける
	NowPos.y -= m_fSpeedFall;

	// 現在座標にセット
	m_pEnemy->SetPos(NowPos);


	//	if ( 地面についたら )
	//	{ 
	//	  // 移動量を0にする
	//	  m_fSpeedFall = NULL;
	// 
	//	  // 状態変更
	//	  ChangeState(new CEnemyStateMove(),ID_MOVE);
	//	}
}
//==================================
// 落下状態終了関数
//==================================
void CEnemyStateFall::OnExit()
{

}


//==================================
// 移動状態時コンストラクタ
//==================================
CEnemyStateMove::CEnemyStateMove()
{
	// IDをセットする
	SetID(ID_MOVE);
}
//==================================
// 移動状態時デストラクタ
//==================================
CEnemyStateMove::~CEnemyStateMove()
{
	// 無し
}
//==================================
// 移動状態開始関数
//==================================
void CEnemyStateMove::OnStart()
{
	// 無し
}
//==================================
// 移動状態更新関数
//==================================
void CEnemyStateMove::OnUpdate()
{
	// 移動処理
	m_pEnemy->UpdateMoving();
}
//==================================
// 移動状態終了関数
//==================================
void CEnemyStateMove::OnExit()
{

}

